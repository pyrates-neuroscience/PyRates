%YAML 1.2
---

# operator templates
####################

op0:
  base: OperatorTemplate
  equations:
    - "a = b*0.5"
    - "b = a + 2.0"
  variables:
    a:
      default: output
    b:
      default: variable

op1:
  base: OperatorTemplate
  equations: "d/dt * a = u - a"
  variables:
    a:
      default: output
    u:
      default: input

op2:
  base: OperatorTemplate
  equations:
    - "b = sigmoid(a)"
    - "d/dt * a = b - a"
  variables:
    a:
      default: output
    b:
      default: variable

op3:
  base: OperatorTemplate
  equations:
    - "d/dt * a = -10.0 * a + b**2 + u"
    - "d/dt * b = 0.01 * a"
  variables:
    a:
      default: variable
    b:
      default: variable
    u:
      default: input

op4:
  base: OperatorTemplate
  equations: "d/dt * u = 2."
  variables:
    u:
      default: output

op5:
  base: OperatorTemplate
  equations: "d/dt * a = u - a"
  variables:
    a:
      default: output
    u:
      default: variable

op6:
  base: OperatorTemplate
  equations: "d/dt * u = 4. + tanh(0.5)"
  variables:
    u:
      default: output

op7:
  base: OperatorTemplate
  equations: "d/dt * a = u + inp - a"
  variables:
    a:
      default: output
    u:
      default: variable
    inp:
      default: input

op8:
  base: OperatorTemplate
  equations: "a = 2.0 + u"
  variables:
    a:
      default: output
    u:
      default: input

# population templates
######################

pop0:
  base: NodeTemplate
  operators:
    - op0

pop1:
  base: NodeTemplate
  operators:
    - op1

pop2:
  base: NodeTemplate
  operators:
    - op2

pop3:
  base: NodeTemplate
  operators:
    - op3

pop4:
  base: NodeTemplate
  operators:
    - op4
    - op1

pop5:
  base: NodeTemplate
  operators:
    - op4
    - op5

pop6:
  base: NodeTemplate
  operators:
    - op4
    - op6
    - op1

pop7:
  base: NodeTemplate
  operators:
    - op4
    - op3
    - op1

pop8:
  base: NodeTemplate
  operators:
    - op7

pop9:
  base: NodeTemplate
  operators:
    - op8

# edge templates
################

DummyEdge:
  base: EdgeTemplate
  operators: []

# circuit templates
###################

net0:
  base: CircuitTemplate
  nodes:
    pop0: pop0
  edges:

net1:
  base: CircuitTemplate
  nodes:
    pop0: pop1
  edges:

net2:
  base: CircuitTemplate
  nodes:
    pop0: pop2
  edges:

net3:
  base: CircuitTemplate
  nodes:
    pop0: pop3
  edges:

net4:
  base: CircuitTemplate
  nodes:
    pop0: pop4
  edges:

net5:
  base: CircuitTemplate
  nodes:
    pop0: pop5
  edges:

net6:
  base: CircuitTemplate
  nodes:
    pop0: pop6
  edges:

net7:
  base: CircuitTemplate
  nodes:
    pop0: pop7
  edges:

net8:
  base: CircuitTemplate
  nodes:
    pop0: pop0
    pop1: pop1
    pop2: pop1
  edges:
    - [pop0/op0/a, pop1/op1/u, DummyEdge, {weight: 2.0}]
    - [pop0/op0/a, pop2/op1/u, DummyEdge, {weight: 0.5}]

net9:
  base: CircuitTemplate
  nodes:
    pop0: pop1
    pop1: pop8
  edges:
    - [pop0/op1/a, pop1/op7/u, DummyEdge, {weight: 2.0}]
    - [pop1/op7/a, pop0/op1/u, DummyEdge, {weight: 0.5}]

net10:
  base: CircuitTemplate
  nodes:
    pop0: pop9
    pop1: pop9
  edges:
    - [pop1/op8/a, pop0/op8/u, DummyEdge, {weight: 0.5, delay: 0.5}]
    - [pop0/op8/a, pop1/op8/u, DummyEdge, {weight: 2.0, delay: 1.0}]

net11:
  base: CircuitTemplate
  nodes:
    pop0: pop1
    pop1: pop8
  edges:
    - [pop0/op1/a, pop1/op7/u, DummyEdge, {weight: 2.0, delay: 0.2}]
    - [pop0/op1/a, pop1/op7/u, DummyEdge, {weight: 0.5, delay: 0.4}]

net12:
  base: CircuitTemplate
  nodes:
    pop0: pop8
    pop1: pop8
  edges:
    - [pop0/op7/a, pop1/op7/u, DummyEdge, {weight: 0.1, delay: 0.2}]
    - [pop1/op7/a, pop0/op7/u, DummyEdge, {weight: 0.5, delay: 0.2}]

